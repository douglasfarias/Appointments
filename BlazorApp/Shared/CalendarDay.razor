@using ClassLibrary.Data.Repositories;
@using ClassLibrary.Factories;
@using ClassLibrary.Models
@using System.Globalization;

<div id="day" name="day" class="col-sm-3 col-md-3 col-lg-3 col-xl-3 flex-shrink-0 flex-grow-0 px-0">
    <div class="card rounded-0 bg-dark border-secondary">
        <div class="card-header border-secondary">
            <div class="container-fluid p-0">
                <div class="row">
                    <div class="col">
                        <strong>
                            @Day.ToString("d")
                        </strong>
                    </div>
                </div>
                <div class="row">
                    <strong>
                        <small>
                            @Day.ToString("dddd").ToUpper()
                        </small>
                    </strong>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @for (int index = 0; index < 24; index++)
            {
                var hour = index.ToString().PadLeft(2, '0');
                <div class="row border-bottom border-secondary py-0 px-0 mx-0 my-0">
                    <div class="col-sm-3 py-5 border-end border-secondary">
                        @($"{hour}:00")
                    </div>
                    <div class="col py-3">
                        @if (Appointments is not null && Appointments.Count > 0)
                        {
                            foreach (var appointment in Appointments.Where(item => item.Date.Hour.ToString().PadLeft(2, '0').Equals(hour)).OrderBy(item => item.Date.Hour))
                            {
                                <CalendarEvent Appointment="appointment" Expanded="Expanded" />
                            }
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public DateTime Day { get; set; }
    [Parameter]
    public bool Expanded { get; set; }
    [Parameter]
    public List<Appointment>? Appointments { get; set; }
}